{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tekommin.REDMOND\\\\source\\\\repos\\\\capacity-management-ui - Copy\\\\src\\\\Geographical.js\";\nimport React, { Component } from 'react';\nimport Map from \"./Map\";\nimport TopNavbar from \"./TopNavbar\";\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass Geographical extends Component {\n  render() {\n    let geographyType = this.props.match.params.id;\n    console.log(geographyType);\n    let geographyValue = \"\";\n\n    if (geographyType == 1) {\n      geographyValue = \"Americas\";\n    }\n\n    if (geographyType == 2) {\n      geographyValue = \"Asia Pacific\";\n    }\n\n    if (geographyType == 3) {\n      geographyValue = \"Europe\";\n    }\n\n    if (geographyType == 4) {\n      geographyValue = \"Middle East And Africa\";\n    }\n\n    if (geographyType == 5) {\n      geographyValue = \"Azure Government\";\n    }\n\n    return React.createElement(Container, {\n      fluid: true,\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0,\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(TopNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      style: {\n        paddingLeft: 0,\n        paddingRight: 0,\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Map, {\n      isGeographical: true,\n      geographyType: geographyValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Geographical;","map":{"version":3,"sources":["C:\\Users\\tekommin.REDMOND\\source\\repos\\capacity-management-ui - Copy\\src\\Geographical.js"],"names":["React","Component","Map","TopNavbar","Container","Row","Col","Geographical","render","geographyType","props","match","params","id","console","log","geographyValue","paddingLeft","paddingRight","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,SAAR,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAEnCO,EAAAA,MAAM,GAAG;AACP,QAAIC,aAAa,GAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACA,QAAIO,cAAc,GAAG,EAArB;;AACA,QAAGP,aAAa,IAAI,CAApB,EACA;AACEO,MAAAA,cAAc,GAAI,UAAlB;AACD;;AACD,QAAGP,aAAa,IAAI,CAApB,EACA;AACEO,MAAAA,cAAc,GAAI,cAAlB;AACD;;AACD,QAAGP,aAAa,IAAI,CAApB,EACA;AACEO,MAAAA,cAAc,GAAI,QAAlB;AACD;;AACD,QAAGP,aAAa,IAAI,CAApB,EACA;AACEO,MAAAA,cAAc,GAAI,wBAAlB;AACD;;AACD,QAAGP,aAAa,IAAI,CAApB,EACA;AACEO,MAAAA,cAAc,GAAI,kBAAlB;AACD;;AACD,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE,IAAlB;AAAyB,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,YAAY,EAAE,CAAhC;AAAmCC,QAAAA,MAAM,EAAE;AAA3C,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADF,CADA,EAIA,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEF,QAAAA,WAAW,EAAE,CAAf;AAAkBC,QAAAA,YAAY,EAAE,CAAhC;AAAmCC,QAAAA,MAAM,EAAE;AAA3C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,oBAAC,GAAD;AAAM,MAAA,cAAc,EAAI,IAAxB;AAA8B,MAAA,aAAa,EAAIH,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADF,CAJA,CADF;AAUD;;AApCkC;;AAuCrC,eAAeT,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Map from \"./Map\";\r\nimport TopNavbar from \"./TopNavbar\";\r\nimport {Container , Row, Col } from 'react-bootstrap';\r\n\r\nclass Geographical extends Component {\r\n  \r\n  render() {    \r\n    let geographyType  = this.props.match.params.id;\r\n    console.log(geographyType);\r\n    let geographyValue = \"\";\r\n    if(geographyType == 1)\r\n    {\r\n      geographyValue  = \"Americas\";\r\n    } \r\n    if(geographyType == 2)\r\n    {\r\n      geographyValue  = \"Asia Pacific\";\r\n    } \r\n    if(geographyType == 3)\r\n    {\r\n      geographyValue  = \"Europe\";\r\n    } \r\n    if(geographyType == 4)\r\n    {\r\n      geographyValue  = \"Middle East And Africa\";\r\n    } \r\n    if(geographyType == 5)\r\n    {\r\n      geographyValue  = \"Azure Government\";\r\n    } \r\n    return (      \r\n      <Container fluid={true}  style={{ paddingLeft: 0, paddingRight: 0, height: \"100%\" }} >\r\n      <Row>\r\n        <Col><TopNavbar/></Col>\r\n      </Row>\r\n      <Row style={{ paddingLeft: 0, paddingRight: 0, height: \"100%\" }} >\r\n        <Col><Map  isGeographical = {true} geographyType = {geographyValue}/></Col>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default Geographical;"]},"metadata":{},"sourceType":"module"}