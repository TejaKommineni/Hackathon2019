{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tekommin.REDMOND\\\\source\\\\repos\\\\capacity-management-ui\\\\src\\\\SideNavbar.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { Button, Collapse, Accordion, Card, Form, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nclass SideNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: this.props.open\n    };\n  }\n\n  componentDidMount() {}\n\n  setOpen(open) {\n    this.setState({\n      open: open\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Select Regions\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridGeography\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Geography\"), React.createElement(Form.Control, {\n      as: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Choose...\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"...\")))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridRegions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Regions\"), React.createElement(Form.Control, {\n      as: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Choose...\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"...\")))), React.createElement(Form.Group, {\n      id: \"formGridCheckbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: \"Check me out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}\n\nSideNavbar.propTypes = {\n  step: PropTypes.number.isRequired\n};\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({// toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNavbar);","map":{"version":3,"sources":["C:\\Users\\tekommin.REDMOND\\source\\repos\\capacity-management-ui\\src\\SideNavbar.js"],"names":["React","Component","PropTypes","Button","Collapse","Accordion","Card","Form","Col","connect","SideNavbar","constructor","props","state","open","componentDidMount","setOpen","setState","render","propTypes","step","number","isRequired","mapStateToProps","todos","getVisibleTodos","visibilityFilter","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport { Button, Collapse, Accordion, Card, Form, Col  } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\n\r\nclass SideNavbar extends Component {\r\n\r\nstatic propTypes = {\r\n    step: PropTypes.number.isRequired,\r\n    }\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        open: this.props.open\r\n    }\r\n}\r\n\r\ncomponentDidMount()\r\n{\r\n      \r\n}\r\n \r\nsetOpen(open)\r\n{\r\n    this.setState({\r\n        open: open\r\n    }); \r\n}\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n          {/* <Button\r\n            onClick={() => this.setOpen(!this.state.open)}\r\n            aria-controls=\"example-collapse-text\"\r\n            aria-expanded={this.state.open}\r\n            size = \"lg\"\r\n          >\r\n            click\r\n          </Button>\r\n          <Collapse in={this.state.open}>\r\n            <div id=\"example-collapse-text\">\r\n              Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\r\n              terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\r\n              labore wes anderson cred nesciunt sapiente ea proident.\r\n            </div>\r\n          </Collapse> */}\r\n\r\n            <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n                <Card.Header>\r\n                <Accordion.Toggle as={Button} variant=\"link\"  eventKey=\"0\">\r\n                    Select Regions\r\n                </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                <Card.Body>\r\n                <Form>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridGeography\">\r\n                        <Form.Label>Geography</Form.Label>\r\n                        <Form.Control as=\"select\">\r\n                            <option>Choose...</option>\r\n                            <option>...</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridRegions\">\r\n                        <Form.Label>Regions</Form.Label>\r\n                        <Form.Control as=\"select\">\r\n                            <option>Choose...</option>\r\n                            <option>...</option>\r\n                        </Form.Control>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group id=\"formGridCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group>\r\n\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n                </Form>\r\n                </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card/>\r\n            </Accordion>\r\n        </>\r\n    );\r\n    \r\n}\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n  })\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    // toggleTodo: id => dispatch(toggleTodo(id))\r\n  })\r\n  \r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SideNavbar)"]},"metadata":{},"sourceType":"module"}