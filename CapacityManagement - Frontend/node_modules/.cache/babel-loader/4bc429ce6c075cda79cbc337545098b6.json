{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tekommin.REDMOND\\\\source\\\\repos\\\\capacity-management-ui\\\\src\\\\Map.js\";\nimport React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport am4geodata_usaLow from \"@amcharts/amcharts4-geodata/usaLow\";\nam4core.useTheme(am4themes_animated);\n\nclass Map extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.azureLocations = {\n      \"asiaeast\": {\n        \"region\": \"East Asia\",\n        \"location\": \"Hong Kong\",\n        \"latitude\": 22.3193,\n        \"longitude\": 114.1694\n      },\n      \"uscentral\": {\n        \"region\": \"Central US\",\n        \"location\": \"Iowa\",\n        \"latitude\": 42.032974,\n        \"longitude\": -93.581543\n      },\n      \"usdodcentral\": {\n        \"region\": \"US DoD Central\",\n        \"location\": \"Iowa\",\n        \"latitude\": 42.032974,\n        \"longitude\": -93.581543\n      }\n    };\n  }\n\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4maps.MapChart); // Set map definition\n\n    chart.geodata = am4geodata_worldLow; // Set projection\n\n    chart.projection = new am4maps.projections.Miller(); // Series for World map\n\n    let worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\n    worldSeries.useGeodata = true;\n    var polygonTemplate = worldSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = chart.colors.getIndex(0);\n    polygonTemplate.nonScalingStroke = true; // Hover state\n\n    let hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#367B25\");\n    worldSeries.exclude = [\"AQ\"];\n    /**\r\n     * Series for the U.S. map\r\n     * It will use its own `geodata`\r\n     */\n\n    let usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\n    usaSeries.geodata = am4geodata_usaLow;\n    usaSeries.useGeodata = true;\n    var polygonTemplate = usaSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = chart.colors.getIndex(0);\n    polygonTemplate.nonScalingStroke = true;\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\tekommin.REDMOND\\source\\repos\\capacity-management-ui\\src\\Map.js"],"names":["React","am4core","am4themes_animated","am4maps","am4geodata_worldLow","am4geodata_usaLow","useTheme","Map","Component","azureLocations","componentDidMount","chart","create","MapChart","geodata","projection","projections","Miller","worldSeries","series","push","MapPolygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","colors","getIndex","nonScalingStroke","hs","states","properties","color","exclude","usaSeries","componentWillUnmount","render","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4geodata_usaLow from \"@amcharts/amcharts4-geodata/usaLow\";\r\nam4core.useTheme(am4themes_animated);\r\n\r\n\r\nclass Map extends React.Component {\r\n\r\n  azureLocations = {\r\n                      \"asiaeast\":{  \"region\" : \"East Asia\", \r\n                                    \"location\": \"Hong Kong\",\r\n                                    \"latitude\" : 22.3193,\r\n                                    \"longitude\": 114.1694\r\n                                 },\r\n\r\n                      \"uscentral\":{ \"region\" : \"Central US\", \r\n                                    \"location\": \"Iowa\",\r\n                                    \"latitude\" : 42.032974,\r\n                                    \"longitude\": -93.581543\r\n                                  },\r\n                      \"usdodcentral\":{ \"region\" : \"US DoD Central\", \r\n                                    \"location\": \"Iowa\",\r\n                                    \"latitude\" : 42.032974,\r\n                                    \"longitude\": -93.581543\r\n                                  }\r\n                    }\r\n\r\n  componentDidMount() {\r\n    let chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n\r\n    // Set map definition\r\n    chart.geodata = am4geodata_worldLow;\r\n    \r\n    // Set projection\r\n    chart.projection = new am4maps.projections.Miller();\r\n    \r\n    // Series for World map\r\n    let worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n    worldSeries.useGeodata = true;\r\n    \r\n    var polygonTemplate = worldSeries.mapPolygons.template;\r\n    polygonTemplate.tooltipText = \"{name}\";\r\n    polygonTemplate.fill = chart.colors.getIndex(0);\r\n    polygonTemplate.nonScalingStroke = true;\r\n    \r\n    // Hover state\r\n    let hs = polygonTemplate.states.create(\"hover\");\r\n    hs.properties.fill = am4core.color(\"#367B25\");\r\n    worldSeries.exclude = [\"AQ\"];\r\n \r\n    /**\r\n     * Series for the U.S. map\r\n     * It will use its own `geodata`\r\n     */\r\n    let usaSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n    usaSeries.geodata = am4geodata_usaLow;\r\n    usaSeries.useGeodata = true;\r\n    var polygonTemplate = usaSeries.mapPolygons.template;\r\n    polygonTemplate.tooltipText = \"{name}\";\r\n    polygonTemplate.fill = chart.colors.getIndex(0);\r\n    polygonTemplate.nonScalingStroke = true;\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}