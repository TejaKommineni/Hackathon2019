{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hakumbu\\\\Desktop\\\\Hackathon2019\\\\CapacityManagement-Frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport Geographical from './Geographical';\nimport Global from './Global';\nimport RegionalContainer from './Regional';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport capacityManagementApp from './redux/Reducers';\nimport { selectGeography, selectRegion } from './redux/Actions';\nconst store = createStore(capacityManagementApp); // Log the initial state\n\nconsole.log(store.getState()); // Every time the state changes, log it\n// Note that subscribe() returns a function for unregistering the listener\n\nconst unsubscribe = store.subscribe(() => console.log(store.getState())); // Dispatch some actions\n//store.dispatch(selectGeography('Learn about actions'))\n//store.dispatch(selectRegion('Learn about reducers'))\n// Stop listening to state updates\n\nunsubscribe();\nconst rootElement = document.getElementById('root');\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  style: {\n    height: \"100%\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/global\",\n  component: Global,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/geographical/:id\",\n  component: Geographical,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/regional\",\n  component: RegionalContainer,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})))), rootElement); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\hakumbu\\Desktop\\Hackathon2019\\CapacityManagement-Frontend\\src\\index.js"],"names":["React","ReactDOM","Route","Link","BrowserRouter","Router","App","Geographical","Global","RegionalContainer","serviceWorker","Provider","createStore","capacityManagementApp","selectGeography","selectRegion","store","console","log","getState","unsubscribe","subscribe","rootElement","document","getElementById","render","height","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,aAAa,IAAIC,MAAvC,QAAqD,kBAArD;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,iBAAP,MAA8B,YAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,qBAAP,MAAkC,kBAAlC;AACA,SACEC,eADF,EAEEC,YAFF,QAGO,iBAHP;AAIA,MAAMC,KAAK,GAAGJ,WAAW,CAACC,qBAAD,CAAzB,C,CAIA;;AACAI,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ,E,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,SAAN,CAAgB,MAAMJ,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ,CAAtB,CAApB,C,CAEA;AACA;AACA;AAEA;;AACAC,WAAW;AAEX,MAAME,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAvB,QAAQ,CAACwB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAET,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,KAAK,EAAE;AAAEU,IAAAA,MAAM,EAAE;AAAV,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAEpB,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,SAAZ;AAAsB,EAAA,SAAS,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,mBAAZ;AAAgC,EAAA,SAAS,EAAED,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,WAAZ;AAAwB,EAAA,SAAS,EAAEE,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADF,CADF,EAUea,WAVf,E,CAcA;AACA;AACA;;AACAZ,aAAa,CAACiB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport Geographical from './Geographical';\r\nimport Global from './Global';\r\nimport RegionalContainer from './Regional';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport capacityManagementApp from './redux/Reducers'\r\nimport {\r\n  selectGeography,\r\n  selectRegion,\r\n} from './redux/Actions'\r\nconst store = createStore(capacityManagementApp)\r\n\r\n\r\n\r\n// Log the initial state\r\nconsole.log(store.getState())\r\n\r\n// Every time the state changes, log it\r\n// Note that subscribe() returns a function for unregistering the listener\r\nconst unsubscribe = store.subscribe(() => console.log(store.getState()))\r\n\r\n// Dispatch some actions\r\n//store.dispatch(selectGeography('Learn about actions'))\r\n//store.dispatch(selectRegion('Learn about reducers'))\r\n\r\n// Stop listening to state updates\r\nunsubscribe()\r\n\r\nconst rootElement = document.getElementById('root');\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div style={{ height: \"100%\" }}>\r\n        <Route exact path=\"/\" component={App} />\r\n        <Route path=\"/global\" component={Global} />\r\n        <Route path=\"/geographical/:id\" component={Geographical} />\r\n        <Route path=\"/regional\" component={RegionalContainer} />\r\n      </div>\r\n    </Router>\r\n  </Provider>, rootElement  \r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}