{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tekommin.REDMOND\\\\source\\\\repos\\\\capacity-management-ui\\\\src\\\\Map.js\";\nimport React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nam4core.useTheme(am4themes_animated);\n\nclass Map extends React.Component {\n  componentDidMount() {\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n    chart.paddingRight = 20;\n    let data = [];\n    let visits = 10;\n\n    for (let i = 1; i < 366; i++) {\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n      data.push({\n        date: new Date(2018, 0, i),\n        name: \"name\" + i,\n        value: visits\n      });\n    }\n\n    chart.data = data;\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    dateAxis.renderer.grid.template.location = 0;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n    series.tooltipText = \"{valueY.value}\";\n    chart.cursor = new am4charts.XYCursor();\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    chart.scrollbarX = scrollbarX;\n    this.chart = chart;\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\tekommin.REDMOND\\source\\repos\\capacity-management-ui\\src\\Map.js"],"names":["React","am4core","am4charts","am4themes_animated","am4maps","am4geodata_worldLow","useTheme","Map","Component","componentDidMount","chart","create","XYChart","paddingRight","data","visits","i","Math","round","random","push","date","Date","name","value","dateAxis","xAxes","DateAxis","renderer","grid","template","location","valueAxis","yAxes","ValueAxis","tooltip","disabled","minWidth","series","LineSeries","dataFields","dateX","valueY","tooltipText","cursor","XYCursor","scrollbarX","XYChartScrollbar","componentWillUnmount","dispose","render","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nam4core.useTheme(am4themes_animated);\r\n\r\n\r\nclass Map extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n    chart.paddingRight = 20;\r\n\r\n    let data = [];\r\n    let visits = 10;\r\n    for (let i = 1; i < 366; i++) {\r\n      visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n      data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n    }\r\n\r\n    chart.data = data;\r\n\r\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n    dateAxis.renderer.grid.template.location = 0;\r\n\r\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n    valueAxis.tooltip.disabled = true;\r\n    valueAxis.renderer.minWidth = 35;\r\n\r\n    let series = chart.series.push(new am4charts.LineSeries());\r\n    series.dataFields.dateX = \"date\";\r\n    series.dataFields.valueY = \"value\";\r\n\r\n    series.tooltipText = \"{valueY.value}\";\r\n    chart.cursor = new am4charts.XYCursor();\r\n\r\n    let scrollbarX = new am4charts.XYChartScrollbar();\r\n    scrollbarX.series.push(series);\r\n    chart.scrollbarX = scrollbarX;\r\n\r\n    this.chart = chart;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}