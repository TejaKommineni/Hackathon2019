{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\hakumbu\\\\Desktop\\\\Hackathon2019\\\\CapacityManagement-Frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\nimport { SELECT_GEOGRAPHY, SELECT_REGION } from './Actions';\nconst initialState = {\n  selectedGeography: \"\",\n  selectedRegion: \"\"\n};\n\nfunction regional(state = initialState, action) {\n  switch (action.type) {\n    case SELECT_GEOGRAPHY:\n      {\n        return _objectSpread({}, state, {\n          selectedGeography: action.selectedGeography\n        });\n      }\n\n    case SELECT_REGION:\n      {\n        return _objectSpread({}, state, {\n          selectedRegion: action.selectedRegion\n        });\n      }\n\n    default:\n      return state;\n  }\n}\n\nconst capacityManagementApp = combineReducers({\n  regional\n});\nexport default capacityManagementApp;","map":{"version":3,"sources":["C:\\Users\\hakumbu\\Desktop\\Hackathon2019\\CapacityManagement-Frontend\\src\\redux\\Reducers.js"],"names":["combineReducers","SELECT_GEOGRAPHY","SELECT_REGION","initialState","selectedGeography","selectedRegion","regional","state","action","type","capacityManagementApp"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACIC,gBADJ,EAEIC,aAFJ,QAGO,WAHP;AAKA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,iBAAiB,EAAG,EADH;AAEjBC,EAAAA,cAAc,EAAG;AAFA,CAArB;;AAKA,SAASC,QAAT,CAAkBC,KAAK,GAAGJ,YAA1B,EAAwCK,MAAxC,EAAgD;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,gBAAL;AAAsB;AACpB,iCACKM,KADL;AAEEH,UAAAA,iBAAiB,EAAEI,MAAM,CAACJ;AAF5B;AAID;;AACD,SAAKF,aAAL;AAAmB;AACjB,iCACKK,KADL;AAEEF,UAAAA,cAAc,EAAEG,MAAM,CAACH;AAFzB;AAID;;AACD;AACE,aAAOE,KAAP;AAdJ;AAgBD;;AAED,MAAMG,qBAAqB,GAAGV,eAAe,CAAC;AAC5CM,EAAAA;AAD4C,CAAD,CAA7C;AAIA,eAAeI,qBAAf","sourcesContent":["import { combineReducers } from 'redux'\r\nimport {\r\n    SELECT_GEOGRAPHY,\r\n    SELECT_REGION\r\n} from './Actions'\r\n\r\nconst initialState = {\r\n    selectedGeography : \"\",\r\n    selectedRegion : \"\"\r\n}\r\n\r\nfunction regional(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SELECT_GEOGRAPHY:{\r\n      return {\r\n        ...state,\r\n        selectedGeography: action.selectedGeography\r\n      }; \r\n    }       \r\n    case SELECT_REGION:{\r\n      return {\r\n        ...state,\r\n        selectedRegion: action.selectedRegion\r\n      }; \r\n    }   \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst capacityManagementApp = combineReducers({\r\n  regional\r\n})\r\n\r\nexport default capacityManagementApp"]},"metadata":{},"sourceType":"module"}