{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tekommin.REDMOND\\\\source\\\\repos\\\\capacity-management-ui\\\\src\\\\Map.js\";\nimport React from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nam4core.useTheme(am4themes_animated);\n\nclass Map extends React.Component {\n  componentDidMount() {\n    let map = am4core.create(\"chartdiv\", am4maps.MapChart);\n    map.geodata = am4geodata_worldLow;\n    map.projection = new am4maps.projections.Miller();\n    var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n    polygonSeries.useGeodata = true;\n    var polygonTemplate = polygonSeries.mapPolygons.template;\n    polygonTemplate.tooltipText = \"{name}\";\n    polygonTemplate.fill = am4core.color(\"#74B266\");\n    var hs = polygonTemplate.states.create(\"hover\");\n    hs.properties.fill = am4core.color(\"#367B25\"); // Remove Antarctica\n\n    polygonSeries.exclude = [\"AQ\"];\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"chartdiv\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["C:\\Users\\tekommin.REDMOND\\source\\repos\\capacity-management-ui\\src\\Map.js"],"names":["React","am4core","am4themes_animated","am4maps","am4geodata_worldLow","useTheme","Map","Component","componentDidMount","map","create","MapChart","geodata","projection","projections","Miller","polygonSeries","chart","series","push","MapPolygonSeries","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","color","hs","states","properties","exclude","componentWillUnmount","dispose","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACAH,OAAO,CAACI,QAAR,CAAiBH,kBAAjB;;AAGA,MAAMI,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,GAAG,GAAGR,OAAO,CAACS,MAAR,CAAe,UAAf,EAA2BP,OAAO,CAACQ,QAAnC,CAAV;AACAF,IAAAA,GAAG,CAACG,OAAJ,GAAcR,mBAAd;AACAK,IAAAA,GAAG,CAACI,UAAJ,GAAiB,IAAIV,OAAO,CAACW,WAAR,CAAoBC,MAAxB,EAAjB;AACA,QAAIC,aAAa,GAAGC,KAAK,CAACC,MAAN,CAAaC,IAAb,CAAkB,IAAIhB,OAAO,CAACiB,gBAAZ,EAAlB,CAApB;AACAJ,IAAAA,aAAa,CAACK,UAAd,GAA2B,IAA3B;AACA,QAAIC,eAAe,GAAGN,aAAa,CAACO,WAAd,CAA0BC,QAAhD;AACAF,IAAAA,eAAe,CAACG,WAAhB,GAA8B,QAA9B;AACAH,IAAAA,eAAe,CAACI,IAAhB,GAAuBzB,OAAO,CAAC0B,KAAR,CAAc,SAAd,CAAvB;AAEA,QAAIC,EAAE,GAAGN,eAAe,CAACO,MAAhB,CAAuBnB,MAAvB,CAA8B,OAA9B,CAAT;AACAkB,IAAAA,EAAE,CAACE,UAAH,CAAcJ,IAAd,GAAqBzB,OAAO,CAAC0B,KAAR,CAAc,SAAd,CAArB,CAXkB,CAalB;;AACAX,IAAAA,aAAa,CAACe,OAAd,GAAwB,CAAC,IAAD,CAAxB;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKf,KAAT,EAAgB;AACd,WAAKA,KAAL,CAAWgB,OAAX;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA7B+B;;AAmClC,eAAe9B,GAAf","sourcesContent":["import React from \"react\";\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nam4core.useTheme(am4themes_animated);\r\n\r\n\r\nclass Map extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let map = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n    map.geodata = am4geodata_worldLow;\r\n    map.projection = new am4maps.projections.Miller();\r\n    var polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n    polygonSeries.useGeodata = true;\r\n    var polygonTemplate = polygonSeries.mapPolygons.template;\r\n    polygonTemplate.tooltipText = \"{name}\";\r\n    polygonTemplate.fill = am4core.color(\"#74B266\");\r\n\r\n    var hs = polygonTemplate.states.create(\"hover\");\r\n    hs.properties.fill = am4core.color(\"#367B25\");\r\n\r\n    // Remove Antarctica\r\n    polygonSeries.exclude = [\"AQ\"];\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.chart) {\r\n      this.chart.dispose();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chartdiv\" style={{ width: \"100%\", height: \"100%\" }}></div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Map;"]},"metadata":{},"sourceType":"module"}